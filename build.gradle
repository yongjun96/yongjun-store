
// restdocs 버전 변수 추가
buildscript {
    ext {
        restdocsApiVersion = '0.18.2'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiVersion}" // restdocs
    id 'org.hidetake.swagger.generator' version '2.18.2' // swagger
}

group = 'springboot'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
//snippetsDirectory 설정
    snippetsDir = file('build/generated-snippets')
}


dependencies {

    // Spring Security and Test
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    // Spring validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // 비밀번호 암호화
    implementation 'org.springframework.security:spring-security-crypto'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

    // spring-boot-devtools 프로젝트 자동 갱신
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // email 인증
    implementation 'javax.mail:mail:1.4.7'
    // Spring Context Support
    implementation 'org.springframework:spring-context-support:5.3.9'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '2.6.3'

    // Gradle 가짜 메일 인증 객체
    testImplementation 'com.icegreen:greenmail:1.6.1'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-core'

    // QueryDSL Implementation
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // RestDocs 추가
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiVersion // openAPI3 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2' // SwaggerUI 추가

    // env를 사용하기 위한 dotenv
    implementation 'io.github.cdimascio:dotenv-java:2.2.0'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // lombok test 에서 사용
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(GenerateSwaggerUI) {
// openapi3 테스크 이후에 실행 됨
    dependsOn 'openapi3'

    //기존 파일 삭제했다가, build 에 json 정적파일 복사 (안해도 됨 → local 확인용)
    delete file('src/main/resources/static/docs/')
    copy {
        from "build/resources/main/static/docs"
        into "src/main/resources/static/docs/"
    }
}

// restdocs-api 옵션 설정 외에 설정은 공식문서 참고
openapi3 {
    servers = [
        { url = "http://localhost:8080" },
        { url = "https://서버url" }
    ]
    title = "SAMPLE API 문서"
    description = "Spring REST Docs with SwaggerUI."
    version = "0.0.1"
    outputFileNamePrefix = 'SAMPLE - 0.0.1'
    format = 'json'

    // /static/docs/SAMPLE - 0.0.1.json 생성 → jar 파일만 배포할 예정이기에 build 에 출력
    outputDirectory = 'build/resources/main/static/docs'
}

// openAPI 작성 자동화를 위해 패키징 전에 openapi3 테스크 선실행 설정
bootJar {
    dependsOn(':openapi3')
}

/**
 * QueryDSL Build Options
 */
// QueryDsl 빌드 옵션 (선택)
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}
